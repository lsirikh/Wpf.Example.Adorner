<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:units="clr-namespace:Wpf.AdornerProject.Sample.UI.Units"
					xmlns:utils="clr-namespace:Wpf.AdornerProject.Sample.Utils"
					xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
					xmlns:cal="http://caliburnmicro.com">

	<utils:ShapeSizeConverter x:Key="ShapeSizeConverter" />
	<utils:ShapeSizeWithLableConverter x:Key="ShapeSizeWithLableConverter" />
	<utils:StringToColorConverter x:Key="StringToColorConverter"/>


	<Style TargetType="{x:Type units:CustomControl}">
		<Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="OnEditable" Value="False"/>
		<Setter Property="IsEditable" Value="False"/>
		<Setter Property="Fill" Value="#FFFF0000"/>
		<Setter Property="FontSize" Value="15"/>
		<Setter Property="Lable" Value="noname"/>
		<Setter Property="IsShowLable" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type units:CustomControl}">
					<!--<Grid Width="{Binding Width}"
						  Height="{Binding Height}"
						  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
							

						<Ellipse Grid.Row="0"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									cal:Message.Attach="[Event SizeChanged]=[Action SizeChange($source, $eventArgs)]"
									IsHitTestVisible="{Binding IsEditable, Converter={StaticResource InvertBooleanConverter}}"
									>
							<Ellipse.Fill>
								<SolidColorBrush Color="{Binding Fill, Converter={StaticResource StringToColorConverter}}" />
							</Ellipse.Fill>
							<Ellipse.Width>
								<MultiBinding Converter="{StaticResource ShapeSizeWithLableConverter}" ConverterParameter="Width">
									<Binding Path="Width" />
								</MultiBinding>
							</Ellipse.Width>
							<Ellipse.Height>
								<MultiBinding Converter="{StaticResource ShapeSizeWithLableConverter}" ConverterParameter="Height">
									<Binding Path="Height"/>
									<Binding Path="ActualHeight" ElementName="LableName"/>
								</MultiBinding>
							</Ellipse.Height>
						</Ellipse>

						<TextBlock Grid.Row="1"
									x:Name="LableName"
									VerticalAlignment="Center"
									HorizontalAlignment="Stretch"
									TextAlignment="Center"
									Margin="2"
									IsHitTestVisible="{Binding IsEditable, Converter={StaticResource InvertBooleanConverter}}"
									Visibility="{Binding IsShowLable, Converter={StaticResource BooleanToVisibilityConverter}}"
									Text="{Binding Lable, UpdateSourceTrigger=PropertyChanged}"
									FontSize="{Binding FontSize, UpdateSourceTrigger=PropertyChanged}"
									/>
					</Grid>-->
					
					<!--<Grid.ContextMenu>
						<ContextMenu Opacity="0.89">
							<MenuItem Header="도형편집"
										Visibility="{TemplateBinding OnEditable, Converter={StaticResource BooleanToVisibilityConverter}}"
										IsEnabled="{TemplateBinding IsEditable, Converter={StaticResource InvertBooleanConverter}}"
										>
								<MenuItem.Icon>
									<md:PackIcon Kind="EditBoxOutline" />
								</MenuItem.Icon>
								<cal:Message.Attach>
									[Event Click] = [Action OnClickEdit($source, $eventArgs)]
								</cal:Message.Attach>
							</MenuItem>
							<MenuItem Header="Exit"
										Visibility="{TemplateBinding OnEditable, Converter={StaticResource BooleanToVisibilityConverter}}"
										IsEnabled="{TemplateBinding IsEditable}">
								<MenuItem.Icon>
									<md:PackIcon Kind="EmergencyExit" />
								</MenuItem.Icon>
								<cal:Message.Attach>
									[Event Click] = [Action OnClickExit($source, $eventArgs)]
								</cal:Message.Attach>
							</MenuItem>
							<MenuItem Header="Delete"
										Visibility="{TemplateBinding OnEditable, Converter={StaticResource BooleanToVisibilityConverter}}"
										>		
								<MenuItem.Icon>
									<md:PackIcon Kind="Delete" />
								</MenuItem.Icon>
								<cal:Message.Attach>
									[Event Click] = [Action OnClickDelete($source, $eventArgs)]
								</cal:Message.Attach>
							</MenuItem>
						</ContextMenu>
					</Grid.ContextMenu>-->

					<ContentPresenter Content="{TemplateBinding Content}"
									  Width="{TemplateBinding Width}"
									  Height="{TemplateBinding Height}"
									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>